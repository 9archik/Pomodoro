.root {
    padding: 10px;
    box-sizing: border-box;
    width: 25%;
    max-height: 100%;
    overflow: auto;
    z-index: 1;
}

@media (max-width: 1200px) {
    .root {
        width: 100%;
        /* padding: 15px 10px 60px; */
    }
}

.header {
    display: flex;
    flex-direction: row;
    width: 100%;
    justify-content: space-between;
    margin: 0 0 12px 0;
}

h3 {
    font-size: 24px;
    font-weight: 700;
}
.headerButtons {
    position: relative;
}
.headerButtons > button {
    width: 32px;
    height: 32px;
    font-size: 24px;
    font-weight: 700;
    background-color: rgba(0, 89, 221, 0.088);
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 100%;
}

.headerButtons > button > svg {
    margin: 0;
}

.headerButtons > .popup {
    position: absolute;
    right: 0;
    width: 220px;
    box-sizing: border-box;
    -webkit-box-shadow: 4px 4px 15px 0px rgba(0, 0, 0, 0.28);
    -moz-box-shadow: 4px 4px 15px 0px rgba(0, 0, 0, 0.28);
    box-shadow: 4px 4px 15px 0px rgba(0, 0, 0, 0.28);
    border-radius: 10px;
    margin: 14px 0 0 0;
    display: block;
    z-index: 10;
    background-color: white;
}

.headerButtons > .popupClose {
    display: none;
}

.headerButtons > .popup svg {
    width: 21px;
    height: 21px;
    margin: 0 7px 0 0;
}

.headerButtons > .popup li {
    display: flex;
    width: 100%;
    padding: 13px 10px;
    cursor: pointer;
    transition: 0.1s;
}

.headerButtons > .popup li:hover {
    background-color: rgba(26, 153, 232, 0.095);
    color: rgb(68, 56, 239);
    transition: 0.2s;
}

.taskList {
    width: 100%;
    margin: 0 0 17px 0;
    font-size: 18px;
}
.taskList > li {
    width: 100%;
}
@keyframes an {
    0% {
        transform: translate(0, 50px);
    }
    100% {
        transform: translate(0);
    }
}

.taskItem {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: 10px;
    margin: 0 0 12px 0;
    border-radius: 14px;
    border: 1px solid rgba(225, 225, 225, 0.618);
    position: relative;
    -webkit-box-shadow: 4px 4px 11px -1px rgba(0, 0, 0, 0.11);
    -moz-box-shadow: 4px 4px 11px -1px rgba(0, 0, 0, 0.11);
    box-shadow: 4px 4px 11px -1px rgba(0, 0, 0, 0.11);
    transition: 0.2s;
}

.taskItemChecked {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: 10px;
    margin: 0 0 12px 0;
    border-radius: 14px;
    border: 1px solid rgba(225, 225, 225, 0.618);
    background-color: rgba(0, 0, 0, 0.054);
    position: relative;
    -webkit-box-shadow: 4px 4px 11px -1px rgba(0, 0, 0, 0.11);
    -moz-box-shadow: 4px 4px 11px -1px rgba(0, 0, 0, 0.11);
    box-shadow: 4px 4px 11px -1px rgba(0, 0, 0, 0.11);
    transition: 0.2s;
}

.taskItem > input {
    position: absolute;
    z-index: -1;
    opacity: 0;
}

.taskItem > input + label {
    display: inline-flex;
    align-items: center;
    user-select: none;
}

.taskItem > input + label::before {
    content: "";
    display: inline-block;
    width: 26px;
    height: 26px;
    flex-shrink: 0;
    flex-grow: 0;
    border: 1px solid #adb5bd;
    border-radius: 0.25em;
    margin-right: 0.5em;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 50% 50%;
    border-radius: 100%;
}

/* .taskItem> input:checked + label::before {
    border-color: gray;
    background-color: gray;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
} */

.taskItem > label {
    max-width: 100%;
    word-wrap: break-word;
    word-break: break-all;
}

.taskItemChecked > label {
    max-width: 100%;
    word-wrap: break-word;
    word-break: break-all;
}

.taskItemChecked > input {
    position: absolute;
    z-index: -1;
    opacity: 0;
}

.taskItemChecked > input + label {
    display: inline-flex;
    align-items: center;
    user-select: none;
}

.taskItemChecked > input + label::before {
    content: "";
    display: inline-block;
    width: 26px;
    height: 26px;
    flex-shrink: 0;
    flex-grow: 0;
    border: 1px solid #adb5bd;
    border-radius: 0.25em;
    margin-right: 0.5em;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 50% 50%;
    border-radius: 100%;
}

.taskItemChecked > input:checked + label::before {
    border-color: gray;
    background-color: gray;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
}

.taskItemChecked > label {
    max-width: 100%;
    word-wrap: break-word;
    word-break: break-all;
}

.taskItemBtns {
    position: absolute;
    right: 10px;
    z-index: 10;
    top: 49%;
    transform: translate(0, -50%);
    opacity: 0;
    display: none;
}

.taskItem:hover > .taskItemBtns {
    opacity: 1;
    transition: 0.2s;
    display: flex;
}

.taskItemChecked:hover > .taskItemBtns {
    opacity: 1;
    transition: 0.2s;
}

.taskItemBtns > button {
    background-color: rgb(200, 234, 255);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 100%;
    padding: 10px;
    color: gray;
    transition: 0.2s;
}

.taskItemBtns > button:hover {
    color: rgb(68, 56, 239);
}

.taskItemBtns > button + button {
    margin: 0 0 0 7px;
}

.taskItemBtns > button > svg {
    margin: 0;
    width: 21px;
    height: 21px;
}

.taskItemInput {
    display: block;
    width: 100%;
    border: 1px solid rgba(0, 0, 0, 0.253);
    padding: 12px 5px;
    border-radius: 10px;
    margin: 0 0 12px 0;
    animation: an 0.5s;
}

.inputForm {
    min-height: 45px;
    width: 100%;
    border: none;
    padding: 5px;
    resize: none;
    margin: 0 0 14px 0;
    font-size: 18px;
}

.inputForm:focus {
    border: none;
    outline: none;
}

.taskItemInput > div {
    display: flex;
}

.taskItemInput > div > button {
    padding: 11px 22px;
    border-radius: 11px;
    font-size: 18px;
}

.taskItemInput > div > button:first-of-type {
    color: white;
    background-color: rgba(0, 0, 255, 0.8);

    margin: 0 7px 0 0;
}

.taskItemInput > div > button:first-of-type:hover {
    background-color: rgb(0, 0, 210);
}

.addTask {
    padding: 17px 8px;
    border-radius: 10px;
    width: 100%;
    border: 1px solid rgba(0, 0, 0, 0.205);
    background-color: #f2f2f2;
    font-size: 14px;
    -webkit-box-shadow: inset 0px 10px 15px -6px rgba(0, 0, 0, 0.1);
    -moz-box-shadow: inset 0px 10px 15px -6px rgba(0, 0, 0, 0.1);
    box-shadow: inset 0px 10px 15px -6px rgba(0, 0, 0, 0.1);
    animation: an 0.5s;
    font-size: 18px;
}
.addTask i {
    margin: 0 7px 0 0;
}

.addTask > span {
    display: flex;
    align-items: center;
}

.isEdit {
    display: none;
}

.labelChecked {
    text-decoration: line-through;
}
.cancelBtn {
    transition: 0.5s;
}

.cancelBtn:hover {
    transition: 0.5s;
    background-color: rgba(0, 89, 253, 0.163);
}
